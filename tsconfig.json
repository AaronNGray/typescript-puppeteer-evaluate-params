{
  "compilerOptions": {
    "target": "ES2020",                     // Allows modern JavaScript features
    "module": "ESNext",                    // Enables ES module support
    "strict": true,                        // Enables all strict type-checking options
    "esModuleInterop": true,               // Ensures compatibility with CommonJS and ES modules
    "forceConsistentCasingInFileNames": true, // Enforces consistent file naming
    "skipLibCheck": true,                  // Skips type checking for imported libraries
    "noImplicitAny": false,                // Allows `any` where necessary
    "strictNullChecks": true,              // Ensures null/undefined are handled explicitly
    "noImplicitReturns": true,             // Flags missing return statements
    "noFallthroughCasesInSwitch": true,    // Prevents fallthrough in switch statements
    "resolveJsonModule": true,             // Allows importing `.json` files
    "downlevelIteration": true,            // Enables for-of and spread support in older targets
    "experimentalDecorators": true,        // Enables decorators for advanced patterns
    "noImplicitOverride": true,            // Requires `override` keyword in subclasses
    "incremental": true,                    // Speeds up incremental builds
 
    /* Basic Options */
    "lib": ["es2020", "dom"],                             /* Specify library files to be included in the compilation:  */
    // "allowJs": true,                       /* Allow javascript files to be compiled. */
    // "checkJs": true,                       /* Report errors in .js files. */
    // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    "declarationMap": true,     /* Generates a sourcemap for each corresponding '.d.ts' file. */
    "sourceMap": true,                     /* Generates corresponding '.map' file. */
    // "outFile": "./",                       /* Concatenate and emit output to single file. */
    "outDir": "./dist",                       /* Redirect output structure to the directory. */
    // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "removeComments": true,                /* Do not emit comments to output. */
    // "noEmit": true,                        /* Do not emit outputs. */
    "noEmitOnError": false,
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    /* Strict Type-Checking Options */
    "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    "noUnusedLocals": true,                /* Report errors on unused locals. */
    "noUnusedParameters": false,            /* Report errors on unused parameters. */

    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */

    /* Source Map Options */
    // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
  },
  "include": ["src/*.ts"],    // Include all TypeScript files in the `src` directory
  "exclude": ["node_modules", "dist"]      // Exclude dependencies and build outputs
}
